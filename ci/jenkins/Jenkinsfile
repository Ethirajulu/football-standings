pipeline {
  agent any

  environment {
    SONARQUBE_URL = 'http://sonarqube:9000'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Install') {
      steps {
        sh 'pnpm install -w --shamefully-hoist'
      }
    }

    stage('Lint') {
      steps {
        sh 'pnpm nx run-many --target=lint --all'
      }
    }

    stage('Build') {
      steps {
        sh 'pnpm nx run-many --target=build --all'
      }
    }

    stage('Test') {
      steps {
        sh 'pnpm nx run-many --target=test --all --coverage'
      }
    }

    stage('SonarQube Analysis') {
      steps {
        withCredentials([string(credentialsId: 'SONAR_TOKEN', variable: 'SONAR_TOKEN')]) {
          sh "sonar-scanner -Dsonar.sources=. -Dsonar.host.url=${env.SONARQUBE_URL} -Dsonar.token=${SONAR_TOKEN} -Dproject.settings=ci/sonar/sonar-project.properties"
        }
      }
    }
    
    stage('Deploy') {
      steps {
        sh 'podman compose -f docker-compose.yml up --build -d'
      }
    }
  }
}
